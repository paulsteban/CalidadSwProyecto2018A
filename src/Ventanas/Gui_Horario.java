/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Conexion;
import Clases.Dia_Medico;
import Clases.Hora_Medico;
import Clases.Medico;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

public class Gui_Horario extends javax.swing.JDialog {

    public Gui_Horario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setResizable(false);

        PanelL.setVisible(false);
        PanelM.setVisible(false);
        PanelX.setVisible(false);
        PanelJ.setVisible(false);
        PanelV.setVisible(false);
        PanelS.setVisible(false);
        PanelD.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ckL = new javax.swing.JCheckBox();
        ckM = new javax.swing.JCheckBox();
        ckX = new javax.swing.JCheckBox();
        ckJ = new javax.swing.JCheckBox();
        ckV = new javax.swing.JCheckBox();
        ckS = new javax.swing.JCheckBox();
        ckD = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        PanelL = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cmbDesde = new javax.swing.JComboBox();
        cmbHasta = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        PanelM = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        cmbDesde2 = new javax.swing.JComboBox();
        cmbHasta2 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        PanelJ = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        cmbDesde4 = new javax.swing.JComboBox();
        cmbHasta4 = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        PanelX = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        cmbDesde3 = new javax.swing.JComboBox();
        cmbHasta3 = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        PanelV = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        cmbDesde5 = new javax.swing.JComboBox();
        cmbHasta5 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        PanelD = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        cmbDesde9 = new javax.swing.JComboBox();
        cmbHasta9 = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        PanelS = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        cmbDesde6 = new javax.swing.JComboBox();
        cmbHasta6 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Horario");

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));

        ckL.setBackground(new java.awt.Color(153, 255, 153));
        ckL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckL.setText("Lunes");
        ckL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckLItemStateChanged(evt);
            }
        });
        ckL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckLActionPerformed(evt);
            }
        });
        jPanel3.add(ckL);

        ckM.setBackground(new java.awt.Color(153, 255, 153));
        ckM.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckM.setText("Martes");
        ckM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckMItemStateChanged(evt);
            }
        });
        jPanel3.add(ckM);

        ckX.setBackground(new java.awt.Color(153, 255, 153));
        ckX.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckX.setText("Miércoles");
        ckX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckXItemStateChanged(evt);
            }
        });
        ckX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckXActionPerformed(evt);
            }
        });
        jPanel3.add(ckX);

        ckJ.setBackground(new java.awt.Color(153, 255, 153));
        ckJ.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckJ.setText("Jueves");
        ckJ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckJItemStateChanged(evt);
            }
        });
        jPanel3.add(ckJ);

        ckV.setBackground(new java.awt.Color(153, 255, 153));
        ckV.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckV.setText("Viernes");
        ckV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckVItemStateChanged(evt);
            }
        });
        jPanel3.add(ckV);

        ckS.setBackground(new java.awt.Color(153, 255, 153));
        ckS.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckS.setText("Sábado");
        ckS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckSItemStateChanged(evt);
            }
        });
        jPanel3.add(ckS);

        ckD.setBackground(new java.awt.Color(153, 255, 153));
        ckD.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ckD.setText("Domingo");
        ckD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckDItemStateChanged(evt);
            }
        });
        jPanel3.add(ckD);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 560, 40));

        jLabel9.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel9.setText("Dias Laborables");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, 30));

        PanelL.setBackground(new java.awt.Color(153, 255, 153));
        PanelL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel10.setText("Hora Salida:");
        PanelL.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 90, 39));

        cmbDesde.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        cmbDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesdeActionPerformed(evt);
            }
        });
        PanelL.add(cmbDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelL.add(cmbHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 150, 39));

        jLabel12.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel12.setText("Hora Entrada:");
        PanelL.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, 40));

        PanelM.setBackground(new java.awt.Color(153, 255, 153));
        PanelM.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel16.setText("Hora Salida:");
        PanelM.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 80, 39));

        cmbDesde2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelM.add(cmbDesde2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelM.add(cmbHasta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 0, 160, 39));

        jLabel18.setBackground(new java.awt.Color(0, 115, 115));
        jLabel18.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel18.setText("Hora Entrada:");
        PanelM.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelM, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, -1, -1));

        PanelJ.setBackground(new java.awt.Color(153, 255, 153));
        PanelJ.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel22.setText("Hora Salida:");
        PanelJ.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 80, 39));

        cmbDesde4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelJ.add(cmbDesde4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 140, 39));

        cmbHasta4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelJ.add(cmbHasta4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 160, 39));

        jLabel24.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel24.setText("Hora Entrada:");
        PanelJ.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 90, 39));

        jPanel1.add(PanelJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, -1, 40));

        PanelX.setBackground(new java.awt.Color(153, 255, 153));
        PanelX.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel19.setText("Hora Salida:");
        PanelX.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 80, 39));

        cmbDesde3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelX.add(cmbDesde3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        cmbHasta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHasta3ActionPerformed(evt);
            }
        });
        PanelX.add(cmbHasta3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 150, 39));

        jLabel21.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel21.setText("Hora Entrada:");
        PanelX.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelX, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, 40));

        PanelV.setBackground(new java.awt.Color(153, 255, 153));
        PanelV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel25.setText("Hora Salida:");
        PanelV.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 80, 39));

        cmbDesde5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelV.add(cmbDesde5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        cmbHasta5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHasta5ActionPerformed(evt);
            }
        });
        PanelV.add(cmbHasta5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 150, 39));

        jLabel27.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel27.setText("Hora Entrada:");
        PanelV.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, 50));

        PanelD.setBackground(new java.awt.Color(153, 255, 153));
        PanelD.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel37.setText("Hora Salida:");
        PanelD.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 80, 39));

        cmbDesde9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelD.add(cmbDesde9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        cmbHasta9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHasta9ActionPerformed(evt);
            }
        });
        PanelD.add(cmbHasta9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 150, 39));

        jLabel39.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel39.setText("Hora Entrada:");
        PanelD.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, 50));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/1435355589_floppy.png"))); // NOI18N
        jButton2.setText("Registar Médico y Horario");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 520, 230, 40));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(204, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/salir.png"))); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, 130, 40));

        PanelS.setBackground(new java.awt.Color(153, 255, 153));
        PanelS.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel28.setText("Hora Salida:");
        PanelS.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 80, 39));

        cmbDesde6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelS.add(cmbDesde6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 39));

        cmbHasta6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "8:00 A.M", "9:00 A.M", "10:00 A.M", "11:00 A.M", "12:00 P.M", "1:00 P.M", "2:00 P.M", "3:00 P.M", "4:00 P.M", "5:00 P.M" }));
        PanelS.add(cmbHasta6, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 0, 160, 39));

        jLabel29.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel29.setText("Sabado");
        PanelS.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, 147, 39));

        jLabel30.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel30.setText("Hora Entrada:");
        PanelS.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 39));

        jPanel1.add(PanelS, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, 520, 40));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Seleccione el Horario Diario");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 210, 30));

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel11.setText("Lunes:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 147, 30));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("HORARIO DE TRABAJO");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 240, 40));

        jLabel38.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel38.setText("Domingo:");
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 147, 39));

        jLabel31.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel31.setText("Sábado:");
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, 147, 30));

        jLabel17.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel17.setText("Martes:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 147, 30));

        jLabel20.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel20.setText("Miércoles:");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 147, 30));

        jLabel23.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel23.setText("Jueves:");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 147, 39));

        jLabel26.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel26.setText("Viernes:");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 147, 39));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calendario.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 90, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1024, 614));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    ResultSet resultado;

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Guardar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private String Nombre;
    private String Apellido;
    private int ID_Especialidad;
    private String Cedula;

    public void setNombre(String Nombre) {
        this.Nombre = Nombre;
    }

    public void setApellido(String Apellido) {
        this.Apellido = Apellido;
    }

    public void setID_Especialidad(int ID_Especialidad) {
        this.ID_Especialidad = ID_Especialidad;
    }

    public void setCedula(String Cedula) {
        this.Cedula = Cedula;
    }

    Gui_AñadirMedico AM;

    public void setAM(Gui_AñadirMedico AM) {
        this.AM = AM;
    }

    public void Guardar() {
        if (ckL.isSelected()) {
            int HRi = cmbDesde.getSelectedIndex();
            int HRs = cmbHasta.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida el Lunes no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckM.isSelected()) {
            int HRi = cmbDesde2.getSelectedIndex();
            int HRs = cmbHasta2.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida del Martes no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckX.isSelected()) {
            int HRi = cmbDesde3.getSelectedIndex();
            int HRs = cmbHasta3.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida del Miércoles no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckJ.isSelected()) {
            int HRi = cmbDesde4.getSelectedIndex();
            int HRs = cmbHasta4.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida del Jueves no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckV.isSelected()) {
            int HRi = cmbDesde5.getSelectedIndex();
            int HRs = cmbHasta5.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida del Viernes no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckS.isSelected()) {
            int HRi = cmbDesde6.getSelectedIndex();
            int HRs = cmbHasta6.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida del Sabado no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (ckD.isSelected()) {
            int HRi = cmbDesde9.getSelectedIndex();
            int HRs = cmbHasta9.getSelectedIndex();

            if (HRi == 0 || HRs == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione la hora correctamente", "Seleccione", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (HRi > HRs) {
                JOptionPane.showMessageDialog(this, "La hora de salida el Domingo no puede ser menor que la de entrada, y la hora de entrada no puede ser mayor que"
                        + " la de salida",
                        "Seleccione correctamente", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        Medico.Agregar_Medico(Nombre, Apellido, ID_Especialidad, Cedula);

        int ID_MaxU = 0;
        int ID_MaxM = 0;

        try {
            resultado = Conexion.consulta("Select Max(ID_Medico) from medico");

            while (resultado.next()) {
                ID_MaxM = resultado.getInt(1);
            }

        } catch (SQLException ex) {
        }

        AgregarHorario(ID_MaxM);

        String NombreUsuario = Nombre.trim() + ID_MaxM;

        StringTokenizer ST = new StringTokenizer(NombreUsuario, " ");

        String Name = "";
        while (ST.hasMoreTokens()) {
            Name = Name.concat(ST.nextToken());
        }

        Name = Name.toLowerCase();

        Gui_AñadirUsuarioMedico AUM = new Gui_AñadirUsuarioMedico(null, true);
        AUM.setNombreUsuario(Name);
        AUM.setVisible(true);

        try {
            resultado = Conexion.consulta("Select Max(ID_Usuario) from usuario");

            while (resultado.next()) {
                ID_MaxU = resultado.getInt(1);
            }

        } catch (SQLException ex) {
        }

//        Medico.Usuario_Medico(ID_MaxM, ID_MaxU, Name);
        AM.dispose();
        this.dispose();

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ckLItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckLItemStateChanged
        if (ckL.isSelected()) {
            PanelL.setVisible(true);
        } else {
            PanelL.setVisible(false);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_ckLItemStateChanged

    private void ckMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckMItemStateChanged
        if (ckM.isSelected()) {
            PanelM.setVisible(true);
        } else {
            PanelM.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckMItemStateChanged

    private void ckXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckXItemStateChanged
        if (ckX.isSelected()) {
            PanelX.setVisible(true);
        } else {
            PanelX.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckXItemStateChanged

    public void AgregarHorario(int ID_MaxM) {

        if (ckL.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "L");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde.getSelectedItem();
            String HoraFinal = (String) cmbHasta.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckM.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "M");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde2.getSelectedItem();
            String HoraFinal = (String) cmbHasta2.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckX.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "X");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde3.getSelectedItem();
            String HoraFinal = (String) cmbHasta3.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckJ.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "J");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde4.getSelectedItem();
            String HoraFinal = (String) cmbHasta4.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckV.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "V");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde5.getSelectedItem();
            String HoraFinal = (String) cmbHasta5.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckS.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "S");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde6.getSelectedItem();
            String HoraFinal = (String) cmbHasta6.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
        if (ckD.isSelected()) {

            int ID_MaxD = 0;

            Dia_Medico.Agregar_Dia_Medico(ID_MaxM, "D");

            try {
                resultado = Conexion.consulta("Select Max(ID_Dia_Medico) from dia_medico");

                while (resultado.next()) {
                    ID_MaxD = resultado.getInt(1);
                }

            } catch (SQLException ex) {
            }

            String HoraInicio = (String) cmbDesde9.getSelectedItem();
            String HoraFinal = (String) cmbHasta9.getSelectedItem();

            Hora_Medico.Agregar_Hora_Medico(ID_MaxD, HoraInicio, HoraFinal);

        }

        /**
         * ************************************************************
         */
    }

    private void ckJItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckJItemStateChanged
        if (ckJ.isSelected()) {
            PanelJ.setVisible(true);
        } else {
            PanelJ.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckJItemStateChanged

    private void ckVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckVItemStateChanged
        if (ckV.isSelected()) {
            PanelV.setVisible(true);
        } else {
            PanelV.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckVItemStateChanged

    private void ckSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckSItemStateChanged
        if (ckS.isSelected()) {
            PanelS.setVisible(true);
        } else {
            PanelS.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckSItemStateChanged

    private void ckDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckDItemStateChanged
        if (ckD.isSelected()) {
            PanelD.setVisible(true);
        } else {
            PanelD.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ckDItemStateChanged

    private void ckLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckLActionPerformed

    private void ckXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckXActionPerformed

    private void cmbHasta9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHasta9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHasta9ActionPerformed

    private void cmbHasta5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHasta5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHasta5ActionPerformed

    private void cmbHasta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHasta3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHasta3ActionPerformed

    private void cmbDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDesdeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui_Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui_Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui_Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui_Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Gui_Horario dialog = new Gui_Horario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelD;
    private javax.swing.JPanel PanelJ;
    private javax.swing.JPanel PanelL;
    private javax.swing.JPanel PanelM;
    private javax.swing.JPanel PanelS;
    private javax.swing.JPanel PanelV;
    private javax.swing.JPanel PanelX;
    private javax.swing.JCheckBox ckD;
    private javax.swing.JCheckBox ckJ;
    private javax.swing.JCheckBox ckL;
    private javax.swing.JCheckBox ckM;
    private javax.swing.JCheckBox ckS;
    private javax.swing.JCheckBox ckV;
    private javax.swing.JCheckBox ckX;
    private javax.swing.JComboBox cmbDesde;
    private javax.swing.JComboBox cmbDesde2;
    private javax.swing.JComboBox cmbDesde3;
    private javax.swing.JComboBox cmbDesde4;
    private javax.swing.JComboBox cmbDesde5;
    private javax.swing.JComboBox cmbDesde6;
    private javax.swing.JComboBox cmbDesde9;
    private javax.swing.JComboBox cmbHasta;
    private javax.swing.JComboBox cmbHasta2;
    private javax.swing.JComboBox cmbHasta3;
    private javax.swing.JComboBox cmbHasta4;
    private javax.swing.JComboBox cmbHasta5;
    private javax.swing.JComboBox cmbHasta6;
    private javax.swing.JComboBox cmbHasta9;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
